#!/bin/bash

# load shared functions and data when not sourced
if [[ -z "$DIR_NAME" ]]; then
    CALLED=1
    DIR_NAME=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
    source "${DIR_NAME}/common.sh"
fi

# This option is used for CI only purposes and
# is disabled by default
DO_NOT_MASK=${DO_NOT_MASK:-0}

get_cm() {
    local NS="$1"
    local service="$2"
    mkdir -p "$NAMESPACE_PATH"/"$NS"/configmaps
    CMS=$(/usr/bin/oc -n "$NS" get cm | grep -i "$service" | awk '{print $1}')
    # shellcheck disable=SC2068
    for cm in ${CMS[@]}; do
        echo "Extracting ConfigMap: $cm"
        run_bg /usr/bin/oc -n "$NS" get cm "$cm" --output yaml '>' "${NAMESPACE_PATH}/${NS}/configmaps/${cm}.yaml"
    done
}


gather_services_cm () {
    local NS="$1"
    # Only get resources if the namespace exists
    if ! check_namespace "$NS"; then
        return
    fi

    for svc in "${OSP_SERVICES[@]}"; do
            get_cm "$NS" "$svc"
    done
}


if [[ $CALLED -eq 1 ]]; then
    NS="$1"
    if [ -z "$NS" ]; then
        echo "No namespace passed, using the default one"
        NS=openstack
    fi

    gather_services_cm "$NS"
    wait_bg

    if [[ "${DO_NOT_MASK}" -eq 0 ]]; then
        # All configmaps have been collected, apply masking on the configmaps directory
        /usr/bin/mask.py --dir "${NAMESPACE_PATH}/${NS}/configmaps"
    fi
fi
